import java.io.*;

/* 
Найти ошибки
В классе B должен быть реализован метод writeObject с одним параметром типа ObjectOutputStream
private void writeObject and private void readObject в классе В переписать
1. Класс B должен быть потомком класса A.
2. Класс B должен поддерживать интерфейс Serializable.
3. Класс A не должен поддерживать интерфейс Serializable.
4. Класс A не должен поддерживать интерфейс Externalizable.
5. Программа должна выполнятся без ошибок.
6. При десериализации должны корректно восстанавливаться значение полей nameA и nameB.
*/
public class Solution implements Serializable{
    public static class A {

        protected String nameA = "A";
        public A(){}
        public A(String nameA) {
            this.nameA += nameA;
        }
    }

    public class B extends A implements Serializable {

        private String nameB;

        public B(String nameA, String nameB) {
            super(nameA);
            this.nameA += nameA;
            this.nameB = nameB;
        }
        private void writeObject(ObjectOutputStream oos) throws Exception{
            oos.defaultWriteObject();
            oos.writeObject(nameA);
        }
        private void readObject(ObjectInputStream ois) throws  Exception{
            ois.defaultReadObject();
            nameA = (String) ois.readObject();
        }
    }
    public static void main(String[] args) throws IOException, ClassNotFoundException {
        ByteArrayOutputStream arrayOutputStream = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(arrayOutputStream);

        Solution solution = new Solution();
        B b = solution.new B("B2", "C33");
        System.out.println("nameA: " + b.nameA + ", nameB: " + b.nameB);

        oos.writeObject(b);
        oos.writeObject(b.nameA);

        ByteArrayInputStream arrayInputStream = new ByteArrayInputStream(arrayOutputStream.toByteArray());
        ObjectInputStream ois = new ObjectInputStream(arrayInputStream);

        B b1 = (B)ois.readObject();
        b1.nameA=(String)ois.readObject();
        System.out.println("nameA: " + b1.nameA + ", nameB: " + b1.nameB);
    }
}
