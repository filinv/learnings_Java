/* 
Знакомство с тегами
Считайте с консоли имя файла, который имеет HTML-формат.
Пример:
Info about Leela <span xml:lang="en" lang="en"><b><span>Turanga Leela
</span></b></span><span>Super</span><span>girl</span>
Первым параметром в метод main приходит тег. Например, "span".
Вывести на консоль все теги, которые соответствуют заданному тегу.
Каждый тег на новой строке, порядок должен соответствовать порядку следования в файле.
Количество пробелов, n, r не влияют на результат.
Файл не содержит тег CDATA, для всех открывающих тегов имеется отдельный закрывающий тег, одиночных тегов нет.
Тег может содержать вложенные теги.
Пример вывода:
<span xml:lang="en" lang="en"><b><span>Turanga Leela</span></b></span>
<span>Turanga Leela</span>
<span>Super</span>
<span>girl</span>
Шаблон тега:
<tag>text1</tag>
<tag text2>text1</tag>
<tag
text2>text1</tag>
text1, text2 могут быть пустыми
Требования:
1. Программа должна считывать имя файла с консоли (используй BufferedReader).
2. BufferedReader для считывания данных с консоли должен быть закрыт.
3. Программа должна считывать содержимое файла (используй FileReader).
4. Поток чтения из файла (FileReader) должен быть закрыт.
5. Программа должна выводить в консоль все теги, которые соответствуют тегу, заданному в параметре метода main.
*/

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Map;
import java.util.Stack;
import java.util.TreeMap;

public class Solution {
    public static void main(String[] args) {
        Map<Integer, Boolean> tagIndexes = new TreeMap<>();
        Map<Integer, Integer> finalIndexes = new TreeMap<>();
        Stack<Integer> openTagsStack = new Stack<>();
        StringBuilder stringBuilder=new StringBuilder();
        String openTag = "<" + args[0];
        String closeTag = "</" + args[0] + ">";
        try {
            BufferedReader consoleReader=new BufferedReader(new InputStreamReader(System.in));// /home/bobah/IdeaProjects/tests/testHtml.html
            BufferedReader fileReader=new BufferedReader(new FileReader(consoleReader.readLine()));
            consoleReader.close();
            while (fileReader.ready()){
                stringBuilder.append(fileReader.readLine());
            }
            fileReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        int openTagIndex = stringBuilder.indexOf(openTag);
        while (openTagIndex != -1) {
            tagIndexes.put(openTagIndex, true);
            openTagIndex = stringBuilder.indexOf(openTag, openTagIndex + 1);
        }

        int closeTagIndex = stringBuilder.indexOf(closeTag);
        while (closeTagIndex != -1) {
            tagIndexes.put(closeTagIndex, false);
            closeTagIndex = stringBuilder.indexOf(closeTag, closeTagIndex + 1);
        }

        for (Map.Entry<Integer, Boolean> entry : tagIndexes.entrySet()) {
            if (entry.getValue()) {
                openTagsStack.push(entry.getKey());
            } else {
                finalIndexes.put(openTagsStack.pop(), entry.getKey());
            }
        }

        for (Map.Entry<Integer, Integer> entry : finalIndexes.entrySet()) {
            System.out.println(stringBuilder.substring(entry.getKey(), entry.getValue() + closeTag.length()));
        }
    }
}
