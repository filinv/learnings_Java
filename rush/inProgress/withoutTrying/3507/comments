
Думал, думал, решал, решал. Вроде бы сделал нормальный код, без создания своего ClassLoader, использовал системный, полученный через метод SecureClassLoader.getSystemClassLoader. Однако, мое решение так и не увидело свет. По какой-то неизвестной причине, у меня не получилось получить список всех файлов в директории. Рвал жопу, делал и через Path изначально, и через File потом - безуспешно. Решил обратиться к гитхабу: там решение, которое точь в точь походит на мое (конкретно про кусок с получением файлов), скопировал, убедившись, что у меня так же само, сдал, приняло. Запустил - та же ошибка, что была и у меня в решении. Какой-то загадочный баг сорвал весь кайф.

UPD: В общем, Solution.class.getProtectionDomain().getCodeSource().getLocation().getPath() + Solution.class.getPackage().getName().replaceAll("[.]", "/") + "/data" заменяет русские буквы на %21%13% и тому подобные каракули, а File и даже Paths.get их, понятное дело, не расшифровывают. Это так, предупреждение для тех, у кого есть русские директории на пути.
Ответить
0
Максим 32 уровень, Санкт-Петербург
22 июня, 16:22
Почему нельзя было сначала сделать задачу "Просто сделай ClassLoader"? 
А вторую задачу с различными извращениями. Зачем делать сразу винегрет?! 
Ответить
0
Динислам Майлюков 32 уровень
6 мая, 14:51
"Епонская" задача. решал дней 10. 
У всех проблемы будут с defineClass(String className, ...)
1) он байт коды файла *.class превращает в рабочий класс, а вы все будете делать это с файлом типа *.java и удивляться - "А че это массив пустой?"
2) ClassName это имя и не только, еще пакет нужно указать, да еще все через точку а не через слеши. Почему? а он native. никто не знает, наверно.
Ответить
0
Avaaron 36 уровень, Москва
28 апреля, 14:38
Вывод:
[com.javarush.task.task35.task3507.data.Cat@61bbe9ba, com.javarush.task.task35.task3507.data.Sheep@1d44bcfa]
Задача не принимает по тём пунктам:
1.Размер множества возвращаемого методом getAllAnimals должен быть равен количеству классов поддерживающих интерфейс Animal;(размер множества равен двум, условие должно быть выполнено)
2.В множестве возвращаемом методом getAllAnimals должны присутствовать все классы поддерживающие интерфейс Animal и имеющие публичный конструктор без параметров (собственно так и есть, но у валидатора своё мнение)ж
3.В множестве возвращаемом методом getAllAnimals НЕ должен присутствовать ни один класс не поддерживающий интерфейс Anima(так и есть, слон во множество не попал)

теперь о логике:
1. Написал свой лоадер(исходя из того что объекты Сlass clazz получены, с ним проблем нет);
2. Получил список файлов;
3. В цикле по каждому file из этого списка получил , собственно, clazz;
3.1 Вызвал у него getDeclaredConstructor(), получая тем самым конструктор без параметров у clazz() если он есть мы его получим, даже если он приватный;
3.2 Что бы не заморачиваться, сразу сделал конструкторы доступными(constructor.setAccessible(true), на тот случай если встретится приватный конструктор, а они там у овцы и у слона)
3.3 Проверяю условие на имплементацию Animal.
3.4. Coздаю объекты через полученный конструктор (constructor.newInstance())
3.5. Добавляю в список.
Слон не прошёл проверку на интерфейс, к конструкторы овцы мы доступ получили, ну и кот ...там всё просто. В множестве 2 объекта.
Внимание вопрос!!!!! Что не так!????

P.S. До этого делал перебором конструкторов, приватный в массив конструкторов не попадал, в множество соответственно попадал только кот, но решение тоже не принималось.
Ответить
0
Danila 36 уровень, Москва
18 апреля, 22:27
Досадно, что авторы задачи забыли упомянуть в условии необходимость создавать собственный ClassLoader, наследуя от уже существующего. Есть варианты решения, включающие использование ClassLoader'a, но без создания его наследника - т.е. намек в названии мимо.
Ответить
0
Николай Соколов 31 уровень
11 апреля, 08:44
Удивительно, я что-то на говнокодил, даже не особо просматривал, нажал кнопку проверки, задача прошла с 1-й попытки.
Желательно не редактировать путь, а воспользоваться советом из комментариев ниже:
Для тех у кого, как и у меня, пути к проекту содержат кириллицу, можете использовать: 
File dir = new File(URLDecoder.decode(pathToAnimals, "UTF-8"));

Единственное, что подсмотрел, это как добавить  в Set полученные экземпляры классов.
Почему именно Set<Animal> было создано для добавления? а не Set<? extends Animal> как в сигнатуре метода?  Зачем кастить в энимал set.add((Animal) clazz.newInstance()); ?  Видимо, не до конца понял тему дженерики, буду благодарен, если мне кто-то ответит, сам не смог дойти.
Ответить
0
Михаил Зорро 36 уровень
24 мая, 20:48
как пишут умные люди со StackOverflow: коллекция параметризованная как Set<? extends Animal> не значит что хранит животное или его наследников, коллекция хранит кого то одного из них, кто подставляется в рантайме. А вот в случае Set<Animal> коллекция как раз хранит животных... что то типа того
Ответить
+1
Вадим 40 уровень
12 февраля, 21:22
Мое мнение - идиотская задача. Гуглить можно и не платя $30 в месяц. Ну неужели нельзя было хоть немножко дать в лекции материал по этой теме в нубо-варимой форме? А так открыл задачу - хз ваще о чем речь. Почитал статьи в инете - смысл вроде понятен, а куда это всё теперь прикрутить - всё равно хз. Открыл решение на Гитхабе - вроде понятно в целом, но сам такое хрен напишешь.
Ответить
+8
Vra 40 уровень
17 декабря 2017, 15:46
очень полезная задача, разобрался, но много вопросов осталось, тем более если учесть, что это самая простая реализация своего ClassLoader..

метод defineClass(name, bytesClass, 0, bytesClass.length); - 1 параметром имя передавать в таком виде - com.javarush.task.task35.task3507.data.Cat
для меня это было не очевидно.. мучился пока на в документации не вычитал:
name - The expected binary name. of the class, or null if not known
Ответить
+1
Эрик Айткулов 34 уровень, Санкт-Петербург
12 декабря 2017, 14:36
от Технопарка с 26ой минуты
с JUG'а
с Хабра теория
с Хабра практика
Ответить
+1
Дмитрий Лощенков 38 уровень, Москва
26 апреля, 18:14
Добавлю, можно еще почитать Hortsmann. Core Java Volume II - Advanced Features. Chapter 9. Security
Ответить
0
Валера 40 уровень
6 декабря 2017, 23:13
Интересная задача.
Ответить
0
Незнайка 40 уровень, Москва
9 ноября 2017, 18:53
В своем классЛоадере ни в коем случае на создавайте функцию совпадающую с родительским классом.
Я пол дня не мог понять, почему не работает. 
КлассЛоадером по умолчанию становится последний лоадер, и вот все остальные потом пытались грузиться через мой класс.
Отсюда все время были эксепшены
Ответить
0
Эрик Айткулов 34 уровень, Санкт-Петербург
11 декабря 2017, 18:13
на хабре
раздел Inspections
и, возможно в тему, создавая класслоадер, стоит его унаследовать, и переопределить конструктор, передавая в качестве аргумента лоадер родитель

public AnimalClassLoader(String pathToAnimals, ClassLoader parent) {
        super(parent);
        this.pathToAnimals = pathToAnimals;
    }

Ответить
0
Игорь 40 уровень, Москва
15 сентября 2017, 17:14
Внимание для тех, кто пользуется Windows! Тот путь, который автор задачи передает в метод, возвращает примерно такую конструкцию:

/C:/Users/user/IdeaProjects/JavaRushTasks/out/production/4.JavaCollections/com/javarush/task/task35/task3507/data

При попытке сделать Path из этой строки, выскакивает:

java.nio.file.InvalidPathException: Illegal char <:> at index 2

По глупости внутри метода я строку отредактировал:

Path[] paths = Files
        .list(Paths.get(pathToAnimals.substring(1)))
        .toArray(Path[]::new);


Не делайте так! Редактировать нужно параметр передаваемый в метод перед вызовом. Из-за этой невнимательности долго и безуспешно бился в валидатор.
Ответить
0
Игорь 40 уровень, Москва
15 сентября 2017, 17:32
Что касается самой задачи, долго мусолил URLClassLoader. Вытянуть из него класс можно по полному имени, но раздобыть его стандартными средствами JDK я не смог.
В итоге, прочитав здесь комментарии, написал свой класс, наследованный от "ClassLoader" и добавил новый метод (а можно переопределить существующий, который в качестве параметра принимает String):

Class<?> findClass(Path path)

Ответить
0
Artem Novikov 40 уровень, Харьков
5 сентября 2017, 13:07
Вот попросил я у Алексея код. До этапа закгрзуки класса не доходит. Его, и другие варианты валятся на формировании списка файлов классов. Если кто сдал задачу и у него не вылетало исключений, проведите разъяснения пожалуйста.
artem.u.novikov(at)gmail.com
Ответить
0
Alex Abramenkov 40 уровень, Киев
1 августа 2017, 00:02
Потомкам:
0. обязательно почитать док https://docs.oracle.com/javase/7/docs/api/java/lang/ClassLoader.html
(это помимо ссылок, приведенных в остальных комментариях)

1. свой ClassLoader - использовать обязательно.
 1.1.  В данном случае достаточно написать свой метод Class load (path)
   1.1.1  - считываете Path в byte[] b  // Files.readAllBytes
   1.1.2 - return defineClass в аргументах которого  (дабы не заморачиваться) первый параметр можно писать null /*из полученного Class вы и без имени сможете вытащить конструкторы и интерфейсы.

2. из аргумента String pathToAnimals получаем  список файлов //new File(pathToAnimals).listFiles()
  2.1 на всякий случай для каждого полученного File проверяем файл ли это и заканчивается ли его имя на ".class".
 2.2  для кaждого File своим ClassLoader  получаем объект Class

3. Обрабатываем полученный объект. В частности - интерфейсы и конструкторы.
  3.1 clazz.getInterfaces()
  3.2 clazz.getConstructors()

3. если ок, то clazz.newInstance() -  и д
Ответить
+12
Игорь 40 уровень, Москва
15 сентября 2017, 20:34
Для проверки реализует ли класс интерфейс можно использовать метод isAssignableFrom. Примерно так: 

Animal.class.isAssignableFrom(clazz)

Ответить
+6
Vra 40 уровень
17 декабря 2017, 15:27
полезно, запомним
Ответить
0
Vladimir Saponko 40 уровень, Минск
29 июля 2017, 10:49
Мда...нерабочее решение с гитхаба прокатывает, а свое рабочее - нет. Нет слов.
Ответить
0
Vitya 33 уровень, Нижний Новгород
7 июля 2017, 14:17
В условии забыли маленькую деталь: Обязательно надо использовать свой загрузчик с методом defineClass. А там можно хоть свой метод определить без перегрузки. Но через Class.forName не катит.
Для тех у кого, как и у меня, пути к проекту содержат кириллицу, можете использовать: 
File dir = new File(URLDecoder.decode(pathToAnimals, "UTF-8"));
Ответить
+2
Александр Хаарт 37 уровень
27 июня 2017, 01:43
Написал код, вывод один и тот же, что и в скачанном решении. Так и не вкурил, почему мое не принимает, разницы там фактически нет. Опять валидатору нужно определенное решение ?

п.с хотя, я гоню... надо же проверять на публичный конструктор.  Забыл...)
Ответить
0
Domadin 36 уровень
19 июня 2017, 17:48
Мда. Ну и задача. Мучился 2 дня, в итоге просто скачал готовое решение. Хотелось бы с тем, кто решил сам ее и разобрался полностью, пообсуждать. Потому что даже к готовому решению у меня имеется много вопросов.
Ответить
0
Ruslan Pivovarov 40 уровень, Москва
25 апреля 2017, 21:54
ClassLoader:
1)
https://blogs.oracle.com/vmrobot/entry/%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D1%8B_%D0%B4%D0%B8%D0%BD%D0%B0%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B9_%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8_%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%BE%D0%B2_%D0%B2 
2)
http://java-online.ru/java-classloader.xhtml
Ответить
+1
BorisD 30 уровень, Москва
17 апреля 2017, 19:38
Метод main не участвует в тестировании, если для проверки вы редактировали pathToAnimals, не забудьте убрать это при сдаче валидатору!
Ответить
0
Максим Хоменко 36 уровень
16 апреля 2017, 22:36
Шикарная задача... много практики и знаний дала.. не очень то и хитрая, но поработать и погуглить нужно.
