import java.util.Date;

/* 
Ошибка в equals/hashCode
1. Хешкоды одинаковых объектов должны быть равны.
2. Метод equals должен проверять равен ли переданный объект равен текущему (сравнение через ==).
3. Метод equals должен проверять является ли переданный объект объектом класса Solution.
4. Метод equals должен проверять значения всех полей у переданного объекта и текущего (учти что некоторые из них могут быть равны null).
5. Должно быть обеспечено корректное поведение HashSet с типом элементов Solution.
6. В классе Solution должен быть реализован метод hashCode.
*/
public class Solution {
    private int anInt;
    private String string;
    private double aDouble;
    private Date date;
    private Solution solution;

    public Solution(int anInt, String string, double aDouble, Date date, Solution solution) {
        this.anInt = anInt;
        this.string = string;
        this.aDouble = aDouble;
        this.date = date;
        this.solution = solution;
    }
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Solution)) return false;//исправлено условие

        Solution solution1 = (Solution) o;

        if ((Double.compare(solution1.aDouble, aDouble) != 0)) return false;
        if (anInt != solution1.anInt) return false;
        if (date != null ? !date.equals(solution1.date) : solution1.date != null) return false;//исправлено 2е !=нулл
        if (solution != null ? !solution.equals(solution1.solution) : solution1.solution != null) return false;//то же
        if (string != null ? !string.equals(solution1.string) : solution1.string != null) return false;//то же

        return true;
    }
    @Override
    public int hashCode() {
        int result;
        long temp;
        result = anInt;
        temp = aDouble != +0.0d ? Double.doubleToLongBits(aDouble) : 0L;
        result = 31 * result + (int) (temp ^ (temp >>> 32));
        result = 31 * result + (solution != null ? solution.hashCode() : 0);
        return result;
    }
    public static void main(String[] args) {
        Date date=new Date();
        Solution solution=null;
        Solution sol=new Solution(2,"String",2.0,date,solution);
        Solution sol1=new Solution(2,"String", 2.0, date, solution);
        Solution sol2=new Solution(3,"unString",3.0,date,sol);
        Solution sol3=new Solution(3,"unString",3.0,date,sol);
        System.out.println("sol.equals(sol1): "+sol.equals(sol1));
        System.out.println("sol.hashCode(): "+sol.hashCode());
        System.out.println("sol1.hashCode(): "+sol1.hashCode());
        System.out.println("sol2.equals(sol3): "+sol2.equals(sol3));
        System.out.println("sol2.hashCode(): "+sol2.hashCode());
        System.out.println("sol3.hashCode(): "+sol3.hashCode());
    }
}
