import java.util.Arrays;
import java.util.Comparator;

/*
Почитать в инете про медиану выборки
Реализуй логику метода sort, который должен сортировать данные в массиве по удаленности от его медианы.
Верни отсортированный массив от минимального расстояния до максимального.
Если удаленность одинаковая у нескольких чисел, то сортируй их в порядке возрастания.
Пример входящего массива:
13, 8, 15, 5, 17
медиана - 13
Отсортированный масив:
13, 15, 17, 8, 5
Требования:
1. Программа не должна выводить текст в консоль.
2. Программа не должна считывать данные с консоли.
3. Класс Solution должен содержать публичный статический метод Integer[] sort(Integer[] array).
4. Метод sort(Integer[] array) класса Solution должен сортировать данные в массиве по удаленности от его медианы.
*/
public class Solution {

    public static void main(String[] args) {
        /*Integer[] arr={4,3,5,2,6,1};
        Integer[]arr2=sort(arr);
        for (Integer i:arr2){
            System.out.print(i+" ");
        }*/
    }
    public static Integer[] sort(Integer[] array) {
        //implement logic here
        Arrays.sort(array);
        final Integer mediana;
        if(array.length%2==0){
            mediana=(array[array.length/2-1]+array[array.length/2])/2;
        }
        else mediana=array[array.length/2];
        Comparator<Integer> comparator=new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                Integer m1=o1>mediana?o1-mediana:mediana-o1;
                Integer m2=o2>mediana?o2-mediana:mediana-o2;
                if((m1-m2)!=0)return m1-m2;
                else return o1-o2;
            }
        };
        Arrays.sort(array,comparator);
        return array;
    }
}
