/* 
Шифровка
Придумать механизм шифровки/дешифровки.
Программа запускается с одним из следующих наборов параметров:
-e fileName fileOutputName
-d fileName fileOutputName
где:
fileName - имя файла, который необходимо зашифровать/расшифровать.
fileOutputName - имя файла, куда необходимо записать результат шифрования/дешифрования.
-e - ключ указывает, что необходимо зашифровать данные.
-d - ключ указывает, что необходимо расшифровать данные.
Требования:
1. Считывать с консоли ничего не нужно.
2. Создай поток для чтения из файла, который приходит вторым параметром ([fileName]).
3. Создай поток для записи в файл, который приходит третьим параметром ([fileOutputName]).
4. В режиме "-e" программа должна зашифровать [fileName] и записать в [fileOutputName].
5. В режиме "-d" программа должна расшифровать [fileName] и записать в [fileOutputName].
6. Созданные для файлов потоки должны быть закрыты.
*/
import java.io.*;

public class Solution {
    public static void main(String[] args) {
        try {
            BufferedReader nativeFile = new BufferedReader(new FileReader(args[1]));
            BufferedWriter destinationFile =new BufferedWriter(new FileWriter(args[2]));
            int data=0;
            int crypt=0;
            if(args[0].equals("-e")){//-e F:\test1.txt F:\test2.txt
                while (nativeFile.ready()){
                    data=nativeFile.read();
                    crypt=data+1;
                    destinationFile.write(crypt);
                }
            }
            else if(args[0].equals("-d")){//-d F:\test2.txt F:\test1.txt
                while (nativeFile.ready()){
                    data=nativeFile.read();
                    crypt=data-1;
                    destinationFile.write(crypt);
                }
            }
            nativeFile.close();
            destinationFile.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
