import java.io.BufferedReader;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
/* 
Хуан Хуанович
В метод main первым параметром приходит имя файла.
В этом файле каждая строка имеет следующий вид:
имя день месяц год
где [имя] - может состоять из нескольких слов, разделенных пробелами, и имеет тип String.
[день] - int, [месяц] - int, [год] - int
данные разделены пробелами.
Заполнить список PEOPLE используя данные из файла.
Закрыть потоки.
Пример входного файла:
Иванов Иван Иванович 31 12 1987
Вася 15 5 2013
Требования:
1. Класс Solution должен содержать публичную константу PEOPLE типа List, которая должна быть сразу проинициализирована.
2. Программа НЕ должна считывать данные с консоли.
3. Программа должна считывать содержимое файла (используй FileReader).
4. Поток чтения из файла (FileReader) должен быть закрыт.
5. Программа должна заполнить список PEOPLE данными из файла.
6. Программа должна правильно работать с двойными именами, например Анна-Надежда.
*/
public class Solution {
    public static final List<Person> PEOPLE = new ArrayList<Person>();

    public static void main(String[] args) throws Exception{
        BufferedReader reader=new BufferedReader(new FileReader(args[0]));
        String name;
        int day;
        int month;
        int year;
        while (reader.ready()){
            String line=reader.readLine();
            String[]buf=line.split("[\\s\\t\\n\\x0B\\f\\r]");
            year=Integer.parseInt(buf[buf.length-1]);
            month=Integer.parseInt(buf[buf.length-2]);
            day=Integer.parseInt(buf[buf.length-3]);
            SimpleDateFormat format=new SimpleDateFormat("dd MM yyy", Locale.getDefault());
            Date date=format.parse(day+" "+month+" "+year);
            StringBuilder sb=new StringBuilder();
            for(int i=0;i<buf.length-3;i++){
                sb.append(buf[i]).append(" ");
            }
            sb.trimToSize();
            name=sb.toString().trim();
            PEOPLE.add(new Person(name,date));
        }
        reader.close();
        for(Person p:PEOPLE){
            System.out.println(p.getName()+" "+p.getBirthday());
        }
    }
}
public class Person {
    private String name;
    private Date birthday;

    public Person(String name, Date birthday) {
        this.name = name;
        this.birthday = birthday;
    }
    public String getName() {
        return name;
    }
    public Date getBirthday() {
        return birthday;
    }
}
