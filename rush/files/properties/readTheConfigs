import java.io.*;
import java.util.Properties;
/* 
Читаем конфиги
Реализовать метод getProperties, который должен считывать свойства из переданного файла fileName.
fileName может иметь любое расширение - как xml, так и любое другое, или вообще не иметь.
Нужно обеспечить корректное чтение свойств.
При возникновении ошибок должен возвращаться пустой объект.
Метод main не участвует в тестировании.
Подсказка: возможно тебе понадобится File.separator.
Требования:
1. Класс Solution должен содержать метод Properties getProperties(String fileName).
2. Метод getProperties должен корректно считывать свойства из xml-файла.
3. Метод getProperties должен корректно считывать свойства из любого другого файла с любым расширением.
4. Метод getProperties должен возвращать пустой объект, если во время чтения свойств возникла ошибка.
*/
public class Solution {
    public static void main(String[] args) {
        Solution solution = new Solution();
        Properties properties = solution.getProperties("4.JavaCollections/src/com/javarush/task/task31/task3109/properties.xml");
        properties.list(System.out);

        properties = solution.getProperties("4.JavaCollections/src/com/javarush/task/task31/task3109/properties.txt");
        properties.list(System.out);

        properties = solution.getProperties("4.JavaCollections/src/com/javarush/task/task31/task3109/notExists");
        properties.list(System.out);
    }

    public Properties getProperties(String fileName) {
        Properties properties=new Properties();
        try {
            FileInputStream inputStream=new FileInputStream(fileName);
            String s=fileName.substring(fileName.lastIndexOf(".")+1);
            if(fileName.substring(fileName.lastIndexOf(".")+1).equals("xml")){
                String props=null;
                BufferedReader fileReader=new BufferedReader(new FileReader(fileName));
                while (fileReader.ready()){
                    String line=fileReader.readLine();
                    if(line.contains("<properties>")){
                        while (true){
                            String inner=fileReader.readLine();
                            if(inner.contains("</properties>"))break;
                            props=inner.substring(inner.indexOf("<entry key=\"")+12,inner.indexOf("</entry>"));
                            properties.put(props.split("\">")[0],props.split("\">")[1]);
                        }
                    }
                }
                fileReader.close();
            }
            else if(fileName.substring(fileName.lastIndexOf(".")+1).equals("txt")){
                properties.load(inputStream);
            }
            else {
                BufferedReader fileReader=new BufferedReader(new FileReader(fileName));
                while (fileReader.ready()){
                    String line=fileReader.readLine();
                    if(line.contains("=")){
                        properties.put(line.split("=")[0],line.split("=")[1]);
                    }
                    else if(line.contains(":")){
                        properties.put(line.split(":")[0],line.split(":")[1]);
                    }
                }
                fileReader.close();
            }
            inputStream.close();
        } catch (IOException e) {
            return properties;
        }
        return properties;
    }
}
