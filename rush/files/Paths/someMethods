import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
/* 
Своя реализация
https://urvanov.ru/2016/05/17/java-8-файлы-nio-2/#path
Реализуй логику методов:
1. readBytes - должен возвращать все байты файла fileName.
2. readLines - должен возвращать все строки файла fileName. Используй кодировку по умолчанию.
3. writeBytes - должен записывать массив bytes в файл fileName.
4. copy - должен копировать файл resourceFileName на место destinationFileName.
ГЛАВНОЕ УСЛОВИЕ:
Никаких других импортов!
*/
public class Solution {
    public static byte[] readBytes(String fileName) throws IOException {
        byte[] bytes=Files.readAllBytes(Paths.get(fileName));
        return bytes;
    }
    public static List<String> readLines(String fileName) throws IOException {
        List<String> result=Files.readAllLines(Paths.get(fileName),Charset.defaultCharset());
        return result;
    }
    public static void writeBytes(String fileName, byte[] bytes) throws IOException {
        Files.write(Paths.get(fileName),bytes);
    }
    public static void copy(String resourceFileName, String destinationFileName) throws IOException {
        if(!Files.exists(Paths.get(destinationFileName))) {
            Files.createFile(Paths.get(destinationFileName));
            writeBytes(destinationFileName,readBytes(resourceFileName));
        }
        else writeBytes(destinationFileName,readBytes(resourceFileName));
    }
}
